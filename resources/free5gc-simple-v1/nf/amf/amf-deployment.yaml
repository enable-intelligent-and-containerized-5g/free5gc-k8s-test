# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: amf
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: amf
#   template:
#     metadata:
#       labels:
#         app: amf
#       annotations:
#         k8s.v1.cni.cncf.io/networks: '[
#           { "name": "5gnetwork", "interface": "n2", "ips": [ "129.97.168.161/24" ] }
#           ]'
#     spec:
#       containers:
#       - name: amf
#         image: free5gc/amf:v3.4.1
#         imagePullPolicy: IfNotPresent
#         ports:
#         - name: namf
#           containerPort: 8000
#         - name: n2
#           containerPort: 38412
#           protocol: SCTP
#         command: ["./amf", "-c", "./config/amfcfg.yaml"]
#         env:
#         - name: GIN_MODE
#           value: "release"
#         volumeMounts:
#         - name: amf-volume
#           mountPath: /free5gc/config/
#       restartPolicy: Always
#       volumes:
#       - name: amf-volume
#         projected:
#           sources:
#           - configMap:
#               name: amf-configmap
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: amf
  labels:
    project: free5gc
    nf: amf
spec:
  selector:
    matchLabels:
      project: free5gc
      nf: amf
  replicas: 1
  template:
    metadata:
      labels:
        project: free5gc
        nf: amf
      # annotations:
      #   k8s.v1.cni.cncf.io/networks: '[
      #     { "name": "5gnetwork", "interface": "n2", "ips": [ "129.97.168.161/24" ] }
      #     ]'
    spec:
      # nodeName: nodo2
      # initContainers:
      # - name: wait-nrf
      #   image: towards5gs/initcurl:1.0.0
      #   env:
      #   - name: DEPENDENCIES
      #     value: http://nrf-nnrf:8000
      #   command: ['sh', '-c', 'set -x; for dependency in $DEPENDENCIES; do while [ $(curl --connect-timeout 1 -s -o /dev/null -w "%{http_code}" $dependency) -ne 200 ]; do echo waiting for dependencies; sleep 1; done; done;']
      containers:
      - image: free5gc/amf:v3.4.1
        imagePullPolicy: IfNotPresent
        name: amf
        ports:
        - name: namf
          containerPort: 8000
        - name: n2
          containerPort: 38412
          protocol: SCTP
        command: ["./amf"]
        args: ["--config", "config/amfcfg.yaml"]
        env:
          - name: GIN_MODE
            value: release
        volumeMounts:
        - mountPath: /free5gc/config/
          name: amf-volume
        resources:
          requests:
            memory: "64Mi"
            cpu: "150m"
          limits:
            memory: "64Mi"
            cpu: "150m"
      # nodeSelector:
      #   kubernetes.io/hostname: worker-1
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
      - name: amf-volume
        projected:
          sources:
          - configMap:
              name: amf-configmap